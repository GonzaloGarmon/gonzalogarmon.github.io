"use strict";

var _loaderUtils = require("loader-utils");

var _schemaUtils = require("schema-utils");

const schema = {
  type: 'object',
  properties: {
    separator: {
      type: 'string'
    }
  },
  additionalProperties: false
};

function pitch(request) {
  const options = (0, _loaderUtils.getOptions)(this);
  (0, _schemaUtils.validate)(schema, options, {
    name: 'group-style'
  });
  const {
    separator = '_'
  } = options;

  if (!/[a-zA-Z0-9-_]+/.test(separator)) {
    throw Error('Invalid separator. The separator only can contain letters, numbers, hyphens and underscore');
  }

  return `
    const result = require(${(0, _loaderUtils.stringifyRequest)(this, "!!" + request)});
    const resultContent = result.__esModule ? result.default : result;

    ${groupStyle}
    ${merge}

    export const style = groupStyle(resultContent, '${separator}');
    export const mergeStyle = merge(style);
  `;
}

;

function groupStyle(style, separator) {
  const regexp = new RegExp(`([\\w-]+?)${separator}([\\w-]+)`);
  const groupStyle = {};

  for (const key in style) {
    if (regexp.test(key)) {
      const [, groupKey, propKey] = key.split(regexp);
      groupStyle[groupKey] = { ...groupStyle[groupKey],
        [propKey]: style[key]
      };
    } else {
      groupStyle[key] = style[key];
    }
  }

  return groupStyle;
}

function merge(defaultStyle) {
  return style => {
    const mergeStyle = { ...defaultStyle
    };

    for (const key in style) {
      if (mergeStyle.hasOwnProperty(key)) {
        mergeStyle[key] = defaultStyle[key] + ' ' + style[key];
      }
    }

    return mergeStyle;
  };
}

module.exports.pitch = pitch;